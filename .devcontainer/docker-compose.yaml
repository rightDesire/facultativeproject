services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sleep infinity
    volumes:
      - ../:/workspaces/facultativeproject:cached
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: postgis/postgis:13-3.1-alpine
    restart: always
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_USER: rightdesire
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: main
    ports:
      - 5400:5432

  redis:
    image: redis:alpine
    restart: always
    ports:
      - 6300:6379
    environment:
      - REDIS_PASSWORD=secret

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9100:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

  elasticsearch:
    image: elasticsearch:8.0.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
